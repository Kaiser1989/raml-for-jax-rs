/**
 * Copyright 2013-2015 (c) MuleSoft, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific
 * language governing permissions and limitations under the License.
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.20.0"
        classpath 'de.marcphilipp.gradle:nexus-publish-plugin:0.2.0'
    }
}


plugins {
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'io.codearte.nexus-staging'
    id 'de.marcphilipp.nexus-publish'
    id 'com.bmuschko.nexus'
}

group = 'org.raml.jaxrs'
version = System.getProperty("artifactVersion")
description 'RAML JAX-RS Gradle Plug-in'

if (System.getProperty("gradleSonatype") != null)  {
    targetRepository = "https://repository-master.mulesoft.org/${System.getProperty('repo')}"
} else {
    targetRepository = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {

        // limitations in my knowledge of gradle ?
        allprojects { ext."signing.gnupg.executable" = System.getenv("GPG_EXECUTABLE") }
        allprojects { ext."signing.keyId" = "0BC1B7B9" }
        allprojects { ext."signing.password" = System.getenv("GPG_PASSPHRASE") }
        allprojects { ext."signing.secretKeyRingFile" = System.getenv("HOME") + "/.gnupg/secring.gpg" }
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/groovy'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'raml-to-jaxrs-gradle-plugin'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'RAML to JAXRS Gragle Plugin'
                description = 'RAML to JAXRS generator'
                inceptionYear = "2017"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/mulesoft-labs/raml-for-jax-rs.git'
                    url = 'https://github.com/mulesoft-labs/raml-for-jax-rs'
                    developerConnection = 'scm:git:https://github.com/mulesoft-labs/raml-for-jax-rs.git'
                }

                developers {
                    developer {
                        name = 'Jean-Philippe Belanger'
                    }
                    developer {
                        name = 'Jonathan Stoikovitch'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url targetRepository
            credentials {
                username = "${System.env.NEXUS_USER}"
                password = "${System.env.NEXUS_PASSWORD}"
            }
        }
    }
}

repositories {
    mavenLocal()
    //if(additionalRepoUrl) {
    //    maven { url additionalRepoUrl }
    //}
    maven { url 'https://repository.mulesoft.org/snapshots/' }
    maven { url 'https://repository.mulesoft.org/releases/' }
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "com.sun.codemodel:codemodel:2.6"
    compile "org.raml.jaxrs:jaxrs-code-generator:" + version
    compile 'commons-io:commons-io:2.4'

    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2.2'
    testCompile 'junit:junit-dep:4.11'
    testCompile 'org.objenesis:objenesis:1.2'
}


signing {
    sign publishing.publications.mavenJava
}

